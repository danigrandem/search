{"ast":null,"code":"var _jsxFileName = \"/Users/kxbf040/Development/codeTest/series-search-starter/src/screens/SearchScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Define a type for the show results\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchScreen = () => {\n  _s();\n  // State definitions with proper types\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSearch = () => {\n    setLoading(true);\n    setError(null);\n\n    // Simulate an asynchronous API call\n    setTimeout(() => {\n      setLoading(false);\n      // Example of mock data, replace this with an actual API call\n      setResults([{\n        id: 1,\n        name: 'Example Show'\n      }, {\n        id: 2,\n        name: 'Another Show'\n      }]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter show name\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      style: {\n        marginRight: '10px',\n        padding: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      style: {\n        padding: '5px'\n      },\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchScreen, \"JIxndLGSTRC9MxvOlSH5iLtF6UU=\");\n_c = SearchScreen;\nexport default SearchScreen;\nvar _c;\n$RefreshReg$(_c, \"SearchScreen\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchScreen","_s","query","setQuery","results","setResults","loading","setLoading","error","setError","handleSearch","setTimeout","id","name","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginRight","onClick","color","map","item","_c","$RefreshReg$"],"sources":["/Users/kxbf040/Development/codeTest/series-search-starter/src/screens/SearchScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\n// Define a type for the show results\ninterface Show {\n    id: number;\n    name: string;\n}\n\nconst SearchScreen: React.FC = () => {\n    // State definitions with proper types\n    const [query, setQuery] = useState<string>('');\n    const [results, setResults] = useState<Show[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [error, setError] = useState<string | null>(null);\n\n    const handleSearch = () => {\n        setLoading(true);\n        setError(null);\n\n        // Simulate an asynchronous API call\n        setTimeout(() => {\n            setLoading(false);\n            // Example of mock data, replace this with an actual API call\n            setResults([{ id: 1, name: 'Example Show' }, { id: 2, name: 'Another Show' }]);\n        }, 1000);\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1>Search Shows</h1>\n            <input\n                type=\"text\"\n                placeholder=\"Enter show name\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                style={{ marginRight: '10px', padding: '5px' }}\n            />\n            <button onClick={handleSearch} style={{ padding: '5px' }}>Search</button>\n            {loading && <div>Loading...</div>}\n            {error && <div style={{ color: 'red' }}>Error: {error}</div>}\n            <ul>\n                {results.map(item => (\n                    <li key={item.id}>{item.name}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default SearchScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}